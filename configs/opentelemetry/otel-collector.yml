# OpenTelemetry Collector configuration for 254Carbon Ingestion Platform

receivers:
  otlp:
    protocols:
      grpc:
        endpoint: 0.0.0.0:4317
      http:
        endpoint: 0.0.0.0:4318

  jaeger:
    protocols:
      grpc:
        endpoint: 0.0.0.0:14250
      thrift_http:
        endpoint: 0.0.0.0:14268
      thrift_compact:
        endpoint: 0.0.0.0:6831
      thrift_binary:
        endpoint: 0.0.0.0:6832

  zipkin:
    endpoint: 0.0.0.0:9411

  prometheus:
    config:
      scrape_configs:
        - job_name: 'otel-collector'
          scrape_interval: 10s
          static_configs:
            - targets: ['localhost:8888']

processors:
  batch:
    timeout: 1s
    send_batch_size: 1024
    send_batch_max_size: 2048

  memory_limiter:
    limit_mib: 512
    spike_limit_mib: 128
    check_interval: 5s

  resource:
    attributes:
      - key: service.name
        value: carbon-ingestion
        action: upsert
      - key: service.version
        value: 1.0.0
        action: upsert
      - key: deployment.environment
        value: production
        action: upsert

  span:
    name:
      to_attributes:
        rules:
          - "^carbon_ingestion_(?P<service>.*)_(?P<operation>.*)$"
          - "^kafka_(?P<operation>.*)$"
          - "^clickhouse_(?P<operation>.*)$"

  filter:
    spans:
      exclude:
        match_type: regexp
        attributes:
          - key: http.url
            value: ".*/health.*"
          - key: http.url
            value: ".*/metrics.*"

exporters:
  jaeger:
    endpoint: jaeger:14250
    tls:
      insecure: true

  zipkin:
    endpoint: http://zipkin:9411/api/v2/spans
    format: json

  prometheus:
    endpoint: "0.0.0.0:8889"
    namespace: carbon_ingestion
    const_labels:
      cluster: carbon-ingestion
      environment: production

  logging:
    loglevel: info
    sampling_initial: 2
    sampling_thereafter: 500

  otlp:
    endpoint: http://jaeger:14250
    tls:
      insecure: true

service:
  pipelines:
    traces:
      receivers: [otlp, jaeger, zipkin]
      processors: [memory_limiter, batch, resource, span, filter]
      exporters: [jaeger, zipkin, logging]

    metrics:
      receivers: [prometheus]
      processors: [memory_limiter, batch, resource]
      exporters: [prometheus, logging]

  extensions: [health_check, pprof, zpages]

extensions:
  health_check:
    endpoint: 0.0.0.0:13133

  pprof:
    endpoint: 0.0.0.0:1777

  zpages:
    endpoint: 0.0.0.0:55679
