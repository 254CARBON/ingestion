[build-system]
requires = ["setuptools>=61.0", "wheel"]
build-backend = "setuptools.build_meta"

[project]
name = "254carbon-ingestion"
version = "0.1.0"
description = "Unified ingestion, connector, and early data processing platform for multi-market energy & commodities data"
authors = [
    {name = "254TRADING", email = "platform@254carbon.com"}
]
license = {text = "Proprietary"}
readme = "README.md"
requires-python = ">=3.12"
classifiers = [
    "Development Status :: 3 - Alpha",
    "Intended Audience :: Developers",
    "License :: Other/Proprietary License",
    "Programming Language :: Python :: 3",
    "Programming Language :: Python :: 3.12",
    "Topic :: Software Development :: Libraries :: Python Modules",
    "Topic :: Scientific/Engineering :: Information Analysis",
]

dependencies = [
    "fastapi>=0.104.0",
    "uvicorn[standard]>=0.24.0",
    "pydantic>=2.5.0",
    "pydantic-settings>=2.1.0",
    "pandas>=2.1.0",
    "numpy>=1.24.0",
    "pyarrow>=14.0.0",
    "avro-python3>=1.10.2",
    "kafka-python>=2.0.2",
    "confluent-kafka>=2.3.0",
    "aiokafka>=0.8.0",
    "clickhouse-driver>=0.2.6",
    "redis>=5.0.0",
    "sqlalchemy>=2.0.0",
    "httpx>=0.25.0",
    "aiohttp>=3.9.0",
    "requests>=2.31.0",
    "pyyaml>=6.0.1",
    "jsonschema>=4.20.0",
    "cerberus>=1.3.4",
    "prometheus-client>=0.19.0",
    "opentelemetry-api>=1.20.0",
    "opentelemetry-sdk>=1.20.0",
    "structlog>=23.2.0",
    "python-dotenv>=1.0.0",
    "click>=8.1.0",
    "rich>=13.7.0",
    "typer>=0.9.0",
]

[project.optional-dependencies]
dev = [
    "pytest>=7.4.0",
    "pytest-asyncio>=0.21.0",
    "pytest-cov>=4.1.0",
    "pytest-mock>=3.12.0",
    "pytest-xdist>=3.5.0",
    "factory-boy>=3.3.0",
    "faker>=20.1.0",
    "ruff>=0.1.0",
    "mypy>=1.7.0",
    "black>=23.11.0",
    "isort>=5.12.0",
    "pre-commit>=3.6.0",
    "sphinx>=7.2.0",
    "sphinx-rtd-theme>=1.3.0",
    "ipython>=8.17.0",
    "jupyter>=1.0.0",
    "notebook>=7.0.0",
]

[project.urls]
Homepage = "https://github.com/254trading/254carbon-ingestion"
Documentation = "https://docs.254carbon.com/ingestion"
Repository = "https://github.com/254trading/254carbon-ingestion"
Issues = "https://github.com/254trading/254carbon-ingestion/issues"

[tool.setuptools.packages.find]
where = ["."]
include = ["connectors*", "services*", "libs*", "scripts*"]

[tool.setuptools.package-dir]
"" = "."

[tool.ruff]
target-version = "py312"
line-length = 88
select = [
    "E",  # pycodestyle errors
    "W",  # pycodestyle warnings
    "F",  # pyflakes
    "I",  # isort
    "B",  # flake8-bugbear
    "C4", # flake8-comprehensions
    "UP", # pyupgrade
]
ignore = [
    "E501",  # line too long, handled by black
    "B008",  # do not perform function calls in argument defaults
    "C901",  # too complex
]

[tool.ruff.per-file-ignores]
"__init__.py" = ["F401"]
"tests/**/*" = ["B011"]

[tool.mypy]
python_version = "3.12"
warn_return_any = true
warn_unused_configs = true
disallow_untyped_defs = true
disallow_incomplete_defs = true
check_untyped_defs = true
disallow_untyped_decorators = true
no_implicit_optional = true
warn_redundant_casts = true
warn_unused_ignores = true
warn_no_return = true
warn_unreachable = true
strict_equality = true

[[tool.mypy.overrides]]
module = [
    "avro.*",
    "kafka.*",
    "confluent_kafka.*",
    "clickhouse_driver.*",
    "redis.*",
    "structlog.*",
    "prometheus_client.*",
]
ignore_missing_imports = true

[tool.pytest.ini_options]
minversion = "7.0"
addopts = "-ra -q --strict-markers --strict-config"
testpaths = ["tests"]
python_files = ["test_*.py", "*_test.py"]
python_classes = ["Test*"]
python_functions = ["test_*"]
markers = [
    "slow: marks tests as slow (deselect with '-m \"not slow\"')",
    "integration: marks tests as integration tests",
    "unit: marks tests as unit tests",
]
asyncio_mode = "auto"

[tool.coverage.run]
source = ["connectors", "services", "libs", "scripts"]
omit = [
    "*/tests/*",
    "*/test_*",
    "*/__pycache__/*",
    "*/migrations/*",
]

[tool.coverage.report]
exclude_lines = [
    "pragma: no cover",
    "def __repr__",
    "if self.debug:",
    "if settings.DEBUG",
    "raise AssertionError",
    "raise NotImplementedError",
    "if 0:",
    "if __name__ == .__main__.:",
    "class .*\\bProtocol\\):",
    "@(abc\\.)?abstractmethod",
]
